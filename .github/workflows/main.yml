---
name: ghaction-cmake
on: push
jobs:
  build:
    strategy:
      matrix:
        cc: [ gcc, clang ]
        cflags:
          - -isystem /usr/include
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: sudo mkdir /usr/include/catch2
      - run: sudo mkdir /usr/include/nlohmann
      - run: sudo wget https://github.com/catchorg/Catch2/releases/download/v2.11.1/catch.hpp -O /usr/include/catch2/catch.hpp
      - run: sudo wget https://github.com/nlohmann/json/releases/download/v3.7.3/json.hpp -O /usr/include/nlohmann/json.hpp
      - uses: docker://lpenz/ghaction-cmake:latest
        with:
          cc: ${{ matrix.cc }}
          cflags: ${{ matrix.cflags }}
  # coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: docker://lpenz/ghaction-cmake:latest
  #       with:
  #         coverage: codecov
  # valgrind:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: docker://lpenz/ghaction-cmake:latest
  #       with:
  #         ctestflags: '-D ExperimentalMemCheck'
  # clang-sanitizers:
  #   name: build with clang -fsanitize
  #   strategy:
  #     matrix:
  #       cflags:
  #         - -fsanitize=address
  #         - -fsanitize=memory
  #         - -fsanitize=undefined
  #         - -fsanitize=dataflow
  #         - -fsanitize=safe-stack
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: docker://lpenz/ghaction-cmake:latest
  #       with:
  #         cc: clang
  #         cflags: ${{ matrix.cflags }}
  # clang-format:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: docker://lpenz/ghaction-cmake:latest
  #       with:
  #         analyzer: clang-format
  # clang-analyzers:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - uses: docker://lpenz/ghaction-cmake:latest
  #       with:
  #         analyzer: clang-tidy
